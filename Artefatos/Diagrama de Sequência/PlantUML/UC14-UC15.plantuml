@startuml

mainframe SD **UC14, UC15** 

'UC14: Como desenvolvedor, desejo executar testes através da interface da extensão.
'UC15: Como desenvolvedor, desejo executar testes em modo de recarregamento automático através da interface da extensão.

actor       Desenvolvedor                     as Dev
participant "Visual Studio Code"              as VSCode
participant "Extension Orchestration Service" as ExtensionOrchestrationService
participant "File Coverage Service"           as FileCoverageService
participant "File Coverage"                   as FileCoverage
participant "Coverage Service"                as CoverageService
participant "Coverage Data"                   as CoverageData
participant "Coverage View"                   as CoverageView
participant "Uncovered Lines Service"         as UncoveredLinesService
participant "Uncovered Lines Data"            as UncoveredLinesData
participant "Uncovered Lines Tree"            as UncoveredLinesTree

Dev -> VSCode: changeToCoveringTab()
activate Dev
activate VSCode

VSCode -> ExtensionOrchestrationService: initViewData()
activate ExtensionOrchestrationService

alt caso tenha pelo menos um script execução de testes configurado
  alt caso tenha os dois scripts de execução de testes configurados
    
    VSCode <-- ExtensionOrchestrationService: Renderiza o botão de execução de testes com duas opções
    Dev <-- VSCode

    loop enquanto trocar
      Dev -> ExtensionOrchestrationService: changeDefaultTestExecution(testType)
      Dev <-- ExtensionOrchestrationService: Altera o botão de execução de testes
    end
    
  else caso tenha somente um dos scripts
    
    VSCode <-- ExtensionOrchestrationService: Renderiza unicamente o botão de execução de testes
    Dev <-- VSCode
    
  end

  Dev -> ExtensionOrchestrationService: runTest()
  
  alt caso não haja nenhum error

    VSCode <- ExtensionOrchestrationService: Executa os testes para gerar o arquivo relatório de cobertura

    par
      loop enquanto o script rodar
        alt quando o arquivo de relatório for alterado
          
          VSCode --> FileCoverageService: fileChanged()
          activate FileCoverageService

          FileCoverageService -> FileCoverage:
          activate FileCoverage
          
          FileCoverageService <-- FileCoverage: newFileCoverage: FileCoverage
          deactivate FileCoverage

          FileCoverageService -> ExtensionOrchestrationService: emitNewFileCoverage(newFileCoverage: FileCoverage)
          deactivate FileCoverageService

          ExtensionOrchestrationService -> CoverageService: calculateCoverage()
          activate CoverageService

          CoverageService -> CoverageData: updateCoverageData()
          activate CoverageData

          CoverageService <-- CoverageData: newCoverageData: CoverageData
          deactivate CoverageData

          CoverageService -> CoverageView: emitNewCoverageData(newCoverageData: CoverageData)
          activate CoverageView

          CoverageService <-- CoverageView
          deactivate CoverageView

          CoverageService -> VSCode: changeEditoreDecoration()
          CoverageService <-- VSCode: Atualiza o estilo do editor

          ExtensionOrchestrationService <-- CoverageService
          deactivate CoverageService

          ExtensionOrchestrationService -> UncoveredLinesService: setCurrentUncoveredLines()
          activate UncoveredLinesService

          UncoveredLinesService -> UncoveredLinesData: updateUncoveredLinesData()
          activate UncoveredLinesData

          UncoveredLinesService <-- UncoveredLinesData: newUncoveredLinesData: UncoveredLinesData
          deactivate UncoveredLinesData

          UncoveredLinesService -> UncoveredLinesTree: emitNewUncoveredLinesData(newUncoveredLinesData: UncoveredLinesData)
          activate UncoveredLinesTree

          UncoveredLinesService <-- UncoveredLinesTree
          deactivate UncoveredLinesTree

          ExtensionOrchestrationService <-- UncoveredLinesService
          deactivate UncoveredLinesService

          Dev <-- ExtensionOrchestrationService: Novos dados de cobertura
        end
      end
    end
  
  else caso haja error

    VSCode <-- ExtensionOrchestrationService: Exibe mensagem de error
    Dev <-- VSCode
  
  end

else caso não tenha nenhum dos scripts

  VSCode <-- ExtensionOrchestrationService: Não renderiza o botão de execução de testes
  deactivate ExtensionOrchestrationService

  Dev <-- VSCode: Sem opção de execução de testes
  deactivate VSCode
  deactivate Dev

end

@enduml
