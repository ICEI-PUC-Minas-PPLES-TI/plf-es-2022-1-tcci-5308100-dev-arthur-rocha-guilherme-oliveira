@startuml

left to right direction
skinparam packageStyle rectangle

"Desenvolvedor" as Dev

package "Extensão (VS Code) - eXAMPLE" {
"Localizar o arquivo de relatório de cobertura para interpretação \n de forma automática sem necessidade de receber o caminho para esse arquivo" as (UC01)
"Exibir no editor o status de cobertura de cada linha" as (UC02)
"Exibir no menu lateral um item referente à aba de cobertura de código" as (UC03)
' "Exibir a porcentagem de cobertura de código total na aba lateral" as (UC04)
' "Permitir a ativação/desativação da visualização do status de cada linha" as (UC05)
' "Permitir a troca da visualização da porcentagem de cobertura total para a porcentagem de cobertura do arquivo abertoPermitir a seleção da branch de referência" as (UC06)
' "Exibir a porcentagem de cobertura de código total na aba lateral referente a todas as linhas criadas e alteradas na ramificação atual" as (UC07)
' "Permitir a ativação/desativação da visualização do status de cobertura com base na diferença das ramificações do versionamento de código" as (UC08)
' "Permitir a troca da visualização da porcentagem de cobertura total para a porcentagem de cobertura do arquivo aberto referente às linhas criadas e alteradas nesse arquivo na ramificação atual" as (UC09)
' "Exibir no editor apenas o status de cobertura das linhas criadas ou alteradas na ramificação atualPoder adicionar um arquivo de configuração na raiz do projeto" as (UC10)
' "Permitir a definição de um valor mínimo de cobertura" as (UC11)
' "Permitir a fixação da ramificação de referência para o projeto" as (UC12)
' "Permitir a definição do script de execução dos testes para geração do arquivo de relatório de cobertura de código de modo que observe as alterações dos arquivos do repositório" as (UC13)
' "Permitir a definição do script de execução dos testes para geração do arquivo de relatório de cobertura de código com modo de observação das alterações dos arquivos do repositório desativado" as (UC14)
' "Permitir a definição do caminho para o arquivo de relatório de coberturaGerar um arquivo de configuração para o GitHub Actions que executa os testes e verifica se os critérios definidos nas configurações do diretório foram alcançados." as (UC15)
' "Gerar integração com a biblioteca husky para gerar um arquivo de Shell Script que executa os testes e verifica se os critérios definidos nas configurações do diretório foram alcançados no momento do pre-commit" as (UC16)
' "Gerar integração com a biblioteca husky para gerar um arquivo de Shell Script que executa os testes e verifica se os critérios definidos nas configurações do diretório foram alcançados no momento do pre-pushNa aba lateral exibir todas as linhas da aplicação que não foram cobertas" as (UC17)
' "Quando o modo de visualização do status de cobertura estiver ativo com base na diferença das ramificações do versionamento de código, deve ser exibir apenas as linhas sem coberturas de testes que foram criadas ou alteradas na ramificação atual" as (UC18)
' "Ao clicar em uma nas linhas listadas como descobertas, redireciona a janela do editor para o arquivo na exata linha selecionadaQuando definido o comando para execução dos testes no arquivo de configurações de modo que observe as alterações dos arquivos do repositório, permitir a execução desse comando pela interface da aba de cobertura de testes" as (UC19)
' "Quando definido o comando para execução dos testes no arquivo de configurações com modo de observação das alterações dos arquivos do repositório desativado, permitir a execução desse comando pela interface da aba de cobertura de testesVisualizar os dados dentro da aba da extensão (Visual Studio Code)" as (UC20)
' "Configuração das opções do modo de visualização dentro da aba da extensão (Visual Studio Code)" as (UC21)
' "As ações e os estados da extensão deve ser logados na API de Output do Visual Studio Code" as (UC22)
}

Dev -- (UC01)
(UC01) .> (UC02) : include
(UC03) .> (UC01) : extends

@enduml
